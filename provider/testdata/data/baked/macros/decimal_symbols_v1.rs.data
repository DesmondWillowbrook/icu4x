// @generated
# [doc = " Implement `DataProvider<DecimalSymbolsV1Marker>` on the given struct using the data"] # [doc = r" hardcoded in this file. This allows the struct to be used with"] # [doc = r" `icu`'s `_unstable` constructors."] # [doc (hidden)] # [macro_export] macro_rules ! __impl_decimal_symbols_v1 { ($ provider : ty) => { # [clippy :: msrv = "1.67"] const _ : () = < $ provider > :: MUST_USE_MAKE_PROVIDER_MACRO ; # [clippy :: msrv = "1.67"] impl icu_provider :: DataProvider < icu_decimal :: provider :: DecimalSymbolsV1Marker > for $ provider { fn load (& self , req : icu_provider :: DataRequest ,) -> Result < icu_provider :: DataResponse < icu_decimal :: provider :: DecimalSymbolsV1Marker > , icu_provider :: DataError > { static EN_AT : < icu_decimal :: provider :: DecimalSymbolsV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_decimal :: provider :: DecimalSymbolsV1 { minus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("-") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , plus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("+") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , decimal_separator : alloc :: borrow :: Cow :: Borrowed (",") , grouping_separator : alloc :: borrow :: Cow :: Borrowed (".") , grouping_sizes : icu_decimal :: provider :: GroupingSizesV1 { primary : 3u8 , secondary : 3u8 , min_grouping : 1u8 , } , digits : ['0' , '1' , '2' , '3' , '4' , '5' , '6' , '7' , '8' , '9'] , } ; static ES : < icu_decimal :: provider :: DecimalSymbolsV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_decimal :: provider :: DecimalSymbolsV1 { minus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("-") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , plus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("+") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , decimal_separator : alloc :: borrow :: Cow :: Borrowed (",") , grouping_separator : alloc :: borrow :: Cow :: Borrowed (".") , grouping_sizes : icu_decimal :: provider :: GroupingSizesV1 { primary : 3u8 , secondary : 3u8 , min_grouping : 2u8 , } , digits : ['0' , '1' , '2' , '3' , '4' , '5' , '6' , '7' , '8' , '9'] , } ; static FR : < icu_decimal :: provider :: DecimalSymbolsV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_decimal :: provider :: DecimalSymbolsV1 { minus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("-") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , plus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("+") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , decimal_separator : alloc :: borrow :: Cow :: Borrowed (",") , grouping_separator : alloc :: borrow :: Cow :: Borrowed ("\u{202f}") , grouping_sizes : icu_decimal :: provider :: GroupingSizesV1 { primary : 3u8 , secondary : 3u8 , min_grouping : 1u8 , } , digits : ['0' , '1' , '2' , '3' , '4' , '5' , '6' , '7' , '8' , '9'] , } ; static EN_FI : < icu_decimal :: provider :: DecimalSymbolsV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_decimal :: provider :: DecimalSymbolsV1 { minus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("-") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , plus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("+") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , decimal_separator : alloc :: borrow :: Cow :: Borrowed (",") , grouping_separator : alloc :: borrow :: Cow :: Borrowed ("\u{a0}") , grouping_sizes : icu_decimal :: provider :: GroupingSizesV1 { primary : 3u8 , secondary : 3u8 , min_grouping : 1u8 , } , digits : ['0' , '1' , '2' , '3' , '4' , '5' , '6' , '7' , '8' , '9'] , } ; static RU_UA : < icu_decimal :: provider :: DecimalSymbolsV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_decimal :: provider :: DecimalSymbolsV1 { minus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("-") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , plus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("+") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , decimal_separator : alloc :: borrow :: Cow :: Borrowed (",") , grouping_separator : alloc :: borrow :: Cow :: Borrowed ("\u{a0}") , grouping_sizes : icu_decimal :: provider :: GroupingSizesV1 { primary : 3u8 , secondary : 3u8 , min_grouping : 2u8 , } , digits : ['0' , '1' , '2' , '3' , '4' , '5' , '6' , '7' , '8' , '9'] , } ; static BN_IN_U_NU_LATN : < icu_decimal :: provider :: DecimalSymbolsV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_decimal :: provider :: DecimalSymbolsV1 { minus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("-") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , plus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("+") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , decimal_separator : alloc :: borrow :: Cow :: Borrowed (".") , grouping_separator : alloc :: borrow :: Cow :: Borrowed (",") , grouping_sizes : icu_decimal :: provider :: GroupingSizesV1 { primary : 3u8 , secondary : 2u8 , min_grouping : 1u8 , } , digits : ['0' , '1' , '2' , '3' , '4' , '5' , '6' , '7' , '8' , '9'] , } ; static BN : < icu_decimal :: provider :: DecimalSymbolsV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_decimal :: provider :: DecimalSymbolsV1 { minus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("-") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , plus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("+") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , decimal_separator : alloc :: borrow :: Cow :: Borrowed (".") , grouping_separator : alloc :: borrow :: Cow :: Borrowed (",") , grouping_sizes : icu_decimal :: provider :: GroupingSizesV1 { primary : 3u8 , secondary : 2u8 , min_grouping : 1u8 , } , digits : ['‡ß¶' , '‡ßß' , '‡ß®' , '‡ß©' , '‡ß™' , '‡ß´' , '‡ß¨' , '‡ß≠' , '‡ßÆ' , '‡ßØ'] , } ; static CCP : < icu_decimal :: provider :: DecimalSymbolsV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_decimal :: provider :: DecimalSymbolsV1 { minus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("-") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , plus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("+") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , decimal_separator : alloc :: borrow :: Cow :: Borrowed (".") , grouping_separator : alloc :: borrow :: Cow :: Borrowed (",") , grouping_sizes : icu_decimal :: provider :: GroupingSizesV1 { primary : 3u8 , secondary : 2u8 , min_grouping : 1u8 , } , digits : ['ëÑ∂' , 'ëÑ∑' , 'ëÑ∏' , 'ëÑπ' , 'ëÑ∫' , 'ëÑª' , 'ëÑº' , 'ëÑΩ' , 'ëÑæ' , 'ëÑø'] , } ; static EN : < icu_decimal :: provider :: DecimalSymbolsV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_decimal :: provider :: DecimalSymbolsV1 { minus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("-") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , plus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("+") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , decimal_separator : alloc :: borrow :: Cow :: Borrowed (".") , grouping_separator : alloc :: borrow :: Cow :: Borrowed (",") , grouping_sizes : icu_decimal :: provider :: GroupingSizesV1 { primary : 3u8 , secondary : 3u8 , min_grouping : 1u8 , } , digits : ['0' , '1' , '2' , '3' , '4' , '5' , '6' , '7' , '8' , '9'] , } ; static TH_U_NU_THAI : < icu_decimal :: provider :: DecimalSymbolsV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_decimal :: provider :: DecimalSymbolsV1 { minus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("-") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , plus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("+") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , decimal_separator : alloc :: borrow :: Cow :: Borrowed (".") , grouping_separator : alloc :: borrow :: Cow :: Borrowed (",") , grouping_sizes : icu_decimal :: provider :: GroupingSizesV1 { primary : 3u8 , secondary : 3u8 , min_grouping : 1u8 , } , digits : ['‡πê' , '‡πë' , '‡πí' , '‡πì' , '‡πî' , '‡πï' , '‡πñ' , '‡πó' , '‡πò' , '‡πô'] , } ; static EN_CH : < icu_decimal :: provider :: DecimalSymbolsV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_decimal :: provider :: DecimalSymbolsV1 { minus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("-") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , plus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("+") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , decimal_separator : alloc :: borrow :: Cow :: Borrowed (".") , grouping_separator : alloc :: borrow :: Cow :: Borrowed ("‚Äô") , grouping_sizes : icu_decimal :: provider :: GroupingSizesV1 { primary : 3u8 , secondary : 3u8 , min_grouping : 1u8 , } , digits : ['0' , '1' , '2' , '3' , '4' , '5' , '6' , '7' , '8' , '9'] , } ; static AR_DZ : < icu_decimal :: provider :: DecimalSymbolsV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_decimal :: provider :: DecimalSymbolsV1 { minus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("\u{200e}-") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , plus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("\u{200e}+") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , decimal_separator : alloc :: borrow :: Cow :: Borrowed (",") , grouping_separator : alloc :: borrow :: Cow :: Borrowed (".") , grouping_sizes : icu_decimal :: provider :: GroupingSizesV1 { primary : 3u8 , secondary : 3u8 , min_grouping : 1u8 , } , digits : ['0' , '1' , '2' , '3' , '4' , '5' , '6' , '7' , '8' , '9'] , } ; static AR_AE : < icu_decimal :: provider :: DecimalSymbolsV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_decimal :: provider :: DecimalSymbolsV1 { minus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("\u{200e}-") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , plus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("\u{200e}+") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , decimal_separator : alloc :: borrow :: Cow :: Borrowed (".") , grouping_separator : alloc :: borrow :: Cow :: Borrowed (",") , grouping_sizes : icu_decimal :: provider :: GroupingSizesV1 { primary : 3u8 , secondary : 3u8 , min_grouping : 1u8 , } , digits : ['0' , '1' , '2' , '3' , '4' , '5' , '6' , '7' , '8' , '9'] , } ; static AR : < icu_decimal :: provider :: DecimalSymbolsV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_decimal :: provider :: DecimalSymbolsV1 { minus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("\u{61c}-") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , plus_sign_affixes : icu_decimal :: provider :: AffixesV1 { prefix : alloc :: borrow :: Cow :: Borrowed ("\u{61c}+") , suffix : alloc :: borrow :: Cow :: Borrowed ("") , } , decimal_separator : alloc :: borrow :: Cow :: Borrowed ("Ÿ´") , grouping_separator : alloc :: borrow :: Cow :: Borrowed ("Ÿ¨") , grouping_sizes : icu_decimal :: provider :: GroupingSizesV1 { primary : 3u8 , secondary : 3u8 , min_grouping : 1u8 , } , digits : ['Ÿ†' , 'Ÿ°' , 'Ÿ¢' , 'Ÿ£' , 'Ÿ§' , 'Ÿ•' , 'Ÿ¶' , 'Ÿß' , 'Ÿ®' , 'Ÿ©'] , } ; static VALUES : [& < icu_decimal :: provider :: DecimalSymbolsV1Marker as icu_provider :: DataMarker > :: Yokeable ; 266usizestatic KEYS : [& str ; 266usize] = ["ar" , "ar-AE" , "ar-AE-u-nu-arab" , "ar-BH" , "ar-BH-u-nu-latn" , "ar-DJ" , "ar-DJ-u-nu-latn" , "ar-DZ" , "ar-DZ-u-nu-arab" , "ar-EG" , "ar-EG-u-nu-latn" , "ar-EH" , "ar-EH-u-nu-arab" , "ar-ER" , "ar-ER-u-nu-latn" , "ar-IL" , "ar-IL-u-nu-latn" , "ar-IQ" , "ar-IQ-u-nu-latn" , "ar-JO" , "ar-JO-u-nu-latn" , "ar-KM" , "ar-KM-u-nu-latn" , "ar-KW" , "ar-KW-u-nu-latn" , "ar-LB" , "ar-LB-u-nu-latn" , "ar-LY" , "ar-LY-u-nu-arab" , "ar-MA" , "ar-MA-u-nu-arab" , "ar-MR" , "ar-MR-u-nu-latn" , "ar-OM" , "ar-OM-u-nu-latn" , "ar-PS" , "ar-PS-u-nu-latn" , "ar-QA" , "ar-QA-u-nu-latn" , "ar-SA" , "ar-SA-u-nu-latn" , "ar-SD" , "ar-SD-u-nu-latn" , "ar-SO" , "ar-SO-u-nu-latn" , "ar-SS" , "ar-SS-u-nu-latn" , "ar-SY" , "ar-SY-u-nu-latn" , "ar-TD" , "ar-TD-u-nu-latn" , "ar-TN" , "ar-TN-u-nu-arab" , "ar-YE" , "ar-YE-u-nu-latn" , "ar-u-nu-latn" , "bn" , "bn-IN" , "bn-IN-u-nu-latn" , "bn-u-nu-latn" , "ccp" , "ccp-IN" , "ccp-IN-u-nu-latn" , "ccp-u-nu-latn" , "en" , "en-001" , "en-150" , "en-AE" , "en-AG" , "en-AI" , "en-AS" , "en-AT" , "en-AU" , "en-BB" , "en-BE" , "en-BI" , "en-BM" , "en-BS" , "en-BW" , "en-BZ" , "en-CA" , "en-CC" , "en-CH" , "en-CK" , "en-CM" , "en-CX" , "en-CY" , "en-DE" , "en-DG" , "en-DK" , "en-DM" , "en-ER" , "en-FI" , "en-FJ" , "en-FK" , "en-FM" , "en-GB" , "en-GD" , "en-GG" , "en-GH" , "en-GI" , "en-GM" , "en-GU" , "en-GY" , "en-HK" , "en-ID" , "en-IE" , "en-IL" , "en-IM" , "en-IN" , "en-IO" , "en-JE" , "en-JM" , "en-KE" , "en-KI" , "en-KN" , "en-KY" , "en-LC" , "en-LR" , "en-LS" , "en-MG" , "en-MH" , "en-MO" , "en-MP" , "en-MS" , "en-MT" , "en-MU" , "en-MV" , "en-MW" , "en-MY" , "en-NA" , "en-NF" , "en-NG" , "en-NL" , "en-NR" , "en-NU" , "en-NZ" , "en-PG" , "en-PH" , "en-PK" , "en-PN" , "en-PR" , "en-PW" , "en-RW" , "en-SB" , "en-SC" , "en-SD" , "en-SE" , "en-SG" , "en-SH" , "en-SI" , "en-SL" , "en-SS" , "en-SX" , "en-SZ" , "en-TC" , "en-TK" , "en-TO" , "en-TT" , "en-TV" , "en-TZ" , "en-UG" , "en-UM" , "en-VC" , "en-VG" , "en-VI" , "en-VU" , "en-WS" , "en-ZA" , "en-ZM" , "en-ZW" , "es" , "es-419" , "es-AR" , "es-BO" , "es-BR" , "es-BZ" , "es-CL" , "es-CO" , "es-CR" , "es-CU" , "es-DO" , "es-EA" , "es-EC" , "es-GQ" , "es-GT" , "es-HN" , "es-IC" , "es-MX" , "es-NI" , "es-PA" , "es-PE" , "es-PH" , "es-PR" , "es-PY" , "es-SV" , "es-US" , "es-UY" , "es-VE" , "fil" , "fr" , "fr-BE" , "fr-BF" , "fr-BI" , "fr-BJ" , "fr-BL" , "fr-CA" , "fr-CD" , "fr-CF" , "fr-CG" , "fr-CH" , "fr-CI" , "fr-CM" , "fr-DJ" , "fr-DZ" , "fr-GA" , "fr-GF" , "fr-GN" , "fr-GP" , "fr-GQ" , "fr-HT" , "fr-KM" , "fr-LU" , "fr-MA" , "fr-MC" , "fr-MF" , "fr-MG" , "fr-ML" , "fr-MQ" , "fr-MR" , "fr-MU" , "fr-NC" , "fr-NE" , "fr-PF" , "fr-PM" , "fr-RE" , "fr-RW" , "fr-SC" , "fr-SN" , "fr-SY" , "fr-TD" , "fr-TG" , "fr-TN" , "fr-VU" , "fr-WF" , "fr-YT" , "hi-Latn" , "ja" , "ru" , "ru-BY" , "ru-KG" , "ru-KZ" , "ru-MD" , "ru-UA" , "sr" , "sr-BA" , "sr-Latn" , "sr-Latn-BA" , "sr-Latn-XK" , "sr-ME" , "sr-XK" , "th" , "th-u-nu-thai" , "tr" , "tr-CY" , "und"] ; if let Ok (payload) = KEYS . binary_search_by (| k | req . locale . strict_cmp (k . as_bytes ()) . reverse ()) . map (| i | * unsafe { VALUES . get_unchecked (i) }) { Ok (icu_provider :: DataResponse { payload : Some (icu_provider :: DataPayload :: from_static_ref (payload)) , metadata : Default :: default () , }) } else { Err (icu_provider :: DataErrorKind :: MissingLocale . with_req (< icu_decimal :: provider :: DecimalSymbolsV1Marker as icu_provider :: KeyedDataMarker > :: KEY , req)) } } } } }