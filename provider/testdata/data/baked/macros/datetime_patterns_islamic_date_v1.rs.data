// @generated
# [doc = " Implement `DataProvider<IslamicDatePatternV1Marker>` on the given struct using the data"] # [doc = r" hardcoded in this file. This allows the struct to be used with"] # [doc = r" `icu`'s `_unstable` constructors."] # [doc (hidden)] # [macro_export] macro_rules ! __impl_datetime_patterns_islamic_date_v1 { ($ provider : ty) => { # [clippy :: msrv = "1.67"] const _ : () = < $ provider > :: MUST_USE_MAKE_PROVIDER_MACRO ; # [clippy :: msrv = "1.67"] impl icu_provider :: DataProvider < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker > for $ provider { fn load (& self , req : icu_provider :: DataRequest ,) -> Result < icu_provider :: DataResponse < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker > , icu_provider :: DataError > { static EN_AE_X_S : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80 \x01\0\0/\x80@\x01\0\0/\x80\x10\x01\0\0 \x80\0\x05") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static ES_PA_X_M : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80 \x02\0\0/\x80@\x02\0\0/\x80\x10\x01\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static ES_PA_X_S : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80 \x02\0\0/\x80@\x02\0\0/\x80\x10\x02\0\0 \x80\0\x05") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static EN_AE_X_M : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80\x10\x01\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static EN_AE_X_L : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80\x10\x01\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static AR_AE_X_S : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x01\0 \x0F\0\0/\x80 \x01\0 \x0F\0\0/\x80\x10\x01\0\0 \x80\0\x05") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static ES_419_X_M : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x01\0\0 \0\0d\0\0e\0\0 \x80 \x03\0\0 \0\0d\0\0e\0\0 \x80\x10\x01\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static ES_419_X_L : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x01\0\0 \0\0d\0\0e\0\0 \x80 \x04\0\0 \0\0d\0\0e\0\0 \x80\x10\x01\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static TH_X_M : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x01\0\0 \x80 \x03\0\0 \x80\0\x01\0\0 \x80\x10\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static RU_BY_X_M : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x01\0\0 \x80 \x03\0\0 \x80\x10\x01\0 /\0\x043\0\0.\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static AR_AE_X_M : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x01\0\0 \x80 \x03\0\0 \x80\x10\x01\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static BN_IN_X_M : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x01\0\0 \x80 \x03\0\0,\0\0 \x80\x10\x01\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static TH_X_L : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x01\0\0 \x80 \x04\0\0 \x80\0\x01\0\0 \x80\x10\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static RU_BY_X_L : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x01\0\0 \x80 \x04\0\0 \x80\x10\x01\0 /\0\x043\0\0.\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static AR_AE_X_L : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x01\0\0 \x80 \x04\0\0 \x80\x10\x01\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static BN_IN_X_L : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x01\0\0 \x80 \x04\0\0,\0\0 \x80\x10\x01\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static SR_BA_X_L : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x01\0\0.\0\0 \x80 \x04\0\0 \x80\x10\x01\0\0.\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static SR_BA_X_S : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x01\0\0.\x80 \x01\0\0.\x80\x10\x01\0\0.\0\0 \x80\0\x05") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static SR_BA_X_M : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x01\0\0.\x80 \x02\0\0.\x80\x10\x01\0\0.\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static TH_X_S : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x01\0\0/\x80 \x01\0\0/\x80\x10\x01\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static BN_IN_X_S : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x01\0\0/\x80 \x01\0\0/\x80\x10\x01\0\0 \x80\0\x05") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static EN_IN_X_S : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x01\0\0/\x80 \x01\0\0/\x80\x10\x01\0\0/\0\0 \x80\0\x05") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static ES_CO_X_M : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x01\0\0/\x80 \x02\0\0/\x80\x10\x01\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static ES_CO_X_S : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x01\0\0/\x80 \x02\0\0/\x80\x10\x02\0\0 \x80\0\x05") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static ES_HN_X_L : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x02\0\0 \0\0d\0\0e\0\0 \x80 \x04\0\0 \0\0d\0\0e\0\0 \x80\x10\x01\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static ES_CL_X_M : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x02\0\0-\x80 \x02\0\0-\x80\x10\x01\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static ES_CL_X_S : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x02\0\0-\x80 \x02\0\0-\x80\x10\x01\0\0 \x80\0\x05") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static EN_IN_X_M : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x02\0\0-\x80 \x03\0\0-\x80\x10\x01\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static RU_BY_X_S : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x02\0\0.\x80 \x02\0\0.\x80\x10\x01\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static EN_CH_X_S : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x02\0\0.\x80 \x02\0\0.\x80\x10\x01\0\0 \x80\0\x05") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static ES_DO_X_M : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x02\0\0/\x80 \x02\0\0/\x80\x10\x01\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static EN_001_X_S : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80@\x02\0\0/\x80 \x02\0\0/\x80\x10\x01\0\0 \x80\0\x05") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static EN_IN_X_F : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80P\x04\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\x10\x01\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static ES_HN_X_F : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80P\x04\0\0 \x80@\x02\0\0 \0\0d\0\0e\0\0 \x80 \x04\0\0 \0\0d\0\0e\0\0 \x80\x10\x01\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static EN_AE_X_F : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80P\x04\0\0,\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80\x10\x01\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static ES_419_X_F : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80P\x04\0\0,\0\0 \x80@\x01\0\0 \0\0d\0\0e\0\0 \x80 \x04\0\0 \0\0d\0\0e\0\0 \x80\x10\x01\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static RU_BY_X_F : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80P\x04\0\0,\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\x10\x01\0 /\0\x043\0\0.\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static EN_001_X_F : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80P\x04\0\0,\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\x10\x01\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static BN_IN_X_F : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80P\x04\0\0,\0\0 \x80@\x01\0\0 \x80 \x04\0\0,\0\0 \x80\x10\x01\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static SR_BA_X_F : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80P\x04\0\0,\0\0 \x80@\x01\0\0.\0\0 \x80 \x04\0\0 \x80\x10\x01\0\0.\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static AR_AE_X_F : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80P\x04\0\x06\x0C\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\x10\x01\0\0 \x80\0\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static TH_X_F : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80P\x04\0\x0E\x17\0\x0E5\0\x0EH\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\0\x01\0\0 \x80\x10\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static TR_CY_X_M : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80\0\x01\0\0 \x80@\x01\0\0 \x80 \x03\0\0 \x80\x10\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static TR_CY_X_L : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80\0\x01\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\x10\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static TR_CY_X_F : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80\0\x01\0\0 \x80@\x01\0\0 \x80 \x04\0\0 \x80\x10\x01\0\0 \x80P\x04") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static UND_X_M : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80\0\x01\0\0 \x80\x10\x01\0\0 \x80 \x03\0\0 \x80@\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static UND_X_L : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80\0\x01\0\0 \x80\x10\x01\0\0 \x80 \x04\0\0 \x80@\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static UND_X_F : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80\0\x01\0\0 \x80\x10\x01\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static JA_X_M : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80\0\x01\x80\x10\x01\0\0/\x80 \x02\0\0/\x80@\x02") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static JA_X_L : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80\0\x01\x80\x10\x01\0^t\x80 \x01\0g\x08\x80@\x01\0e\xE5") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static JA_X_F : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80\0\x01\x80\x10\x01\0^t\x80 \x01\0g\x08\x80@\x01\0e\xE5\x80P\x04") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static TR_CY_X_S : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80\0\x05\0\0 \x80@\x01\0\0.\x80 \x02\0\0.\x80\x10\x01") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static UND_X_S : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80\0\x05\0\0 \x80\x10\x01\0\0-\x80 \x02\0\0-\x80@\x02") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static FR_CA_X_S : < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_datetime :: provider :: neo :: DatePatternV1 { pattern : icu_datetime :: pattern :: runtime :: Pattern { items : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x80\x10\x01\0\0-\x80 \x02\0\0-\x80@\x02\0\0 \x80\0\x05") } , metadata : icu_datetime :: pattern :: runtime :: PatternMetadata :: from_time_granularity (icu_datetime :: pattern :: TimeGranularity :: None) , } , } ; static VALUES : [& < icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: DataMarker > :: Yokeable ; 932usize] = [& AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & AR_AE_X_F , & AR_AE_X_L , & AR_AE_X_M , & AR_AE_X_S , & BN_IN_X_F , & BN_IN_X_L , & BN_IN_X_M , & BN_IN_X_S , & BN_IN_X_F , & BN_IN_X_L , & BN_IN_X_M , & BN_IN_X_S , & BN_IN_X_F , & BN_IN_X_L , & BN_IN_X_M , & BN_IN_X_S , & BN_IN_X_F , & BN_IN_X_L , & BN_IN_X_M , & BN_IN_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_AE_X_F , & EN_AE_X_L , & EN_AE_X_M , & EN_AE_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_AE_X_F , & EN_AE_X_L , & EN_AE_X_M , & EN_AE_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_AE_X_F , & EN_AE_X_L , & EN_AE_X_M , & EN_AE_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_AE_X_F , & EN_AE_X_L , & EN_AE_X_M , & EN_AE_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_CH_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_AE_X_F , & EN_AE_X_L , & EN_AE_X_M , & EN_AE_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & BN_IN_X_L , & EN_IN_X_M , & EN_IN_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_AE_X_F , & EN_AE_X_L , & EN_AE_X_M , & EN_AE_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_AE_X_F , & EN_AE_X_L , & EN_AE_X_M , & EN_AE_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_AE_X_F , & EN_AE_X_L , & EN_AE_X_M , & EN_AE_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_AE_X_F , & EN_AE_X_L , & EN_AE_X_M , & EN_AE_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_AE_X_F , & EN_AE_X_L , & EN_AE_X_M , & EN_AE_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_AE_X_F , & EN_AE_X_L , & EN_AE_X_M , & EN_AE_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_AE_X_F , & EN_AE_X_L , & EN_AE_X_M , & EN_AE_X_S , & ES_419_X_F , & ES_419_X_L , & ES_419_X_M , & BN_IN_X_S , & ES_419_X_F , & ES_419_X_L , & ES_419_X_M , & BN_IN_X_S , & ES_419_X_F , & ES_419_X_L , & ES_419_X_M , & BN_IN_X_S , & ES_419_X_F , & ES_419_X_L , & ES_419_X_M , & BN_IN_X_S , & ES_419_X_F , & ES_419_X_L , & ES_419_X_M , & BN_IN_X_S , & ES_419_X_F , & ES_419_X_L , & ES_CL_X_M , & ES_CL_X_S , & ES_419_X_F , & ES_419_X_L , & ES_CO_X_M , & ES_CO_X_S , & ES_419_X_F , & ES_419_X_L , & ES_419_X_M , & BN_IN_X_S , & ES_419_X_F , & ES_419_X_L , & ES_419_X_M , & BN_IN_X_S , & ES_419_X_F , & ES_419_X_L , & ES_DO_X_M , & BN_IN_X_S , & ES_419_X_F , & ES_419_X_L , & ES_419_X_M , & BN_IN_X_S , & ES_419_X_F , & ES_419_X_L , & ES_419_X_M , & BN_IN_X_S , & ES_419_X_F , & ES_419_X_L , & ES_419_X_M , & BN_IN_X_S , & ES_419_X_F , & ES_419_X_L , & ES_CO_X_M , & ES_CO_X_S , & ES_HN_X_F , & ES_HN_X_L , & ES_419_X_M , & BN_IN_X_S , & ES_419_X_F , & ES_419_X_L , & ES_419_X_M , & BN_IN_X_S , & ES_419_X_F , & ES_419_X_L , & ES_419_X_M , & BN_IN_X_S , & ES_419_X_F , & ES_419_X_L , & ES_419_X_M , & BN_IN_X_S , & ES_419_X_F , & ES_419_X_L , & ES_PA_X_M , & ES_PA_X_S , & ES_419_X_F , & ES_419_X_L , & ES_419_X_M , & ES_CO_X_S , & ES_419_X_F , & ES_419_X_L , & ES_419_X_M , & BN_IN_X_S , & ES_419_X_F , & ES_419_X_L , & ES_PA_X_M , & ES_PA_X_S , & ES_419_X_F , & ES_419_X_L , & ES_419_X_M , & BN_IN_X_S , & ES_419_X_F , & ES_419_X_L , & ES_419_X_M , & BN_IN_X_S , & ES_419_X_F , & ES_419_X_L , & ES_419_X_M , & BN_IN_X_S , & ES_419_X_F , & ES_419_X_L , & ES_419_X_M , & BN_IN_X_S , & ES_419_X_F , & ES_419_X_L , & ES_419_X_M , & BN_IN_X_S , & ES_419_X_F , & ES_419_X_L , & ES_419_X_M , & BN_IN_X_S , & EN_AE_X_F , & EN_AE_X_L , & EN_AE_X_M , & EN_AE_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & ES_CO_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & FR_CA_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_001_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_CH_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & AR_AE_X_L , & AR_AE_X_M , & EN_001_X_S , & EN_IN_X_F , & BN_IN_X_L , & EN_IN_X_M , & EN_IN_X_S , & JA_X_F , & JA_X_L , & JA_X_M , & JA_X_M , & RU_BY_X_F , & RU_BY_X_L , & RU_BY_X_M , & RU_BY_X_S , & RU_BY_X_F , & RU_BY_X_L , & RU_BY_X_M , & RU_BY_X_S , & RU_BY_X_F , & RU_BY_X_L , & RU_BY_X_M , & RU_BY_X_S , & RU_BY_X_F , & RU_BY_X_L , & RU_BY_X_M , & RU_BY_X_S , & RU_BY_X_F , & RU_BY_X_L , & RU_BY_X_M , & RU_BY_X_S , & RU_BY_X_F , & RU_BY_X_L , & RU_BY_X_M , & RU_BY_X_S , & SR_BA_X_F , & SR_BA_X_L , & SR_BA_X_M , & SR_BA_X_S , & SR_BA_X_F , & SR_BA_X_L , & SR_BA_X_M , & SR_BA_X_S , & SR_BA_X_F , & SR_BA_X_L , & SR_BA_X_M , & SR_BA_X_S , & SR_BA_X_F , & SR_BA_X_L , & SR_BA_X_M , & SR_BA_X_S , & SR_BA_X_F , & SR_BA_X_L , & SR_BA_X_M , & SR_BA_X_S , & SR_BA_X_F , & SR_BA_X_L , & SR_BA_X_M , & SR_BA_X_S , & SR_BA_X_F , & SR_BA_X_L , & SR_BA_X_M , & SR_BA_X_S , & TH_X_F , & TH_X_L , & TH_X_M , & TH_X_S , & TR_CY_X_F , & TR_CY_X_L , & TR_CY_X_M , & TR_CY_X_S , & TR_CY_X_F , & TR_CY_X_L , & TR_CY_X_M , & TR_CY_X_S , & UND_X_F , & UND_X_L , & UND_X_M , & UND_X_S] ; static KEYS : [& str ; 932usize] = ["ar-AE-x-f" , "ar-AE-x-l" , "ar-AE-x-m" , "ar-AE-x-s" , "ar-BH-x-f" , "ar-BH-x-l" , "ar-BH-x-m" , "ar-BH-x-s" , "ar-DJ-x-f" , "ar-DJ-x-l" , "ar-DJ-x-m" , "ar-DJ-x-s" , "ar-DZ-x-f" , "ar-DZ-x-l" , "ar-DZ-x-m" , "ar-DZ-x-s" , "ar-EG-x-f" , "ar-EG-x-l" , "ar-EG-x-m" , "ar-EG-x-s" , "ar-EH-x-f" , "ar-EH-x-l" , "ar-EH-x-m" , "ar-EH-x-s" , "ar-ER-x-f" , "ar-ER-x-l" , "ar-ER-x-m" , "ar-ER-x-s" , "ar-IL-x-f" , "ar-IL-x-l" , "ar-IL-x-m" , "ar-IL-x-s" , "ar-IQ-x-f" , "ar-IQ-x-l" , "ar-IQ-x-m" , "ar-IQ-x-s" , "ar-JO-x-f" , "ar-JO-x-l" , "ar-JO-x-m" , "ar-JO-x-s" , "ar-KM-x-f" , "ar-KM-x-l" , "ar-KM-x-m" , "ar-KM-x-s" , "ar-KW-x-f" , "ar-KW-x-l" , "ar-KW-x-m" , "ar-KW-x-s" , "ar-LB-x-f" , "ar-LB-x-l" , "ar-LB-x-m" , "ar-LB-x-s" , "ar-LY-x-f" , "ar-LY-x-l" , "ar-LY-x-m" , "ar-LY-x-s" , "ar-MA-x-f" , "ar-MA-x-l" , "ar-MA-x-m" , "ar-MA-x-s" , "ar-MR-x-f" , "ar-MR-x-l" , "ar-MR-x-m" , "ar-MR-x-s" , "ar-OM-x-f" , "ar-OM-x-l" , "ar-OM-x-m" , "ar-OM-x-s" , "ar-PS-x-f" , "ar-PS-x-l" , "ar-PS-x-m" , "ar-PS-x-s" , "ar-QA-x-f" , "ar-QA-x-l" , "ar-QA-x-m" , "ar-QA-x-s" , "ar-SA-x-f" , "ar-SA-x-l" , "ar-SA-x-m" , "ar-SA-x-s" , "ar-SD-x-f" , "ar-SD-x-l" , "ar-SD-x-m" , "ar-SD-x-s" , "ar-SO-x-f" , "ar-SO-x-l" , "ar-SO-x-m" , "ar-SO-x-s" , "ar-SS-x-f" , "ar-SS-x-l" , "ar-SS-x-m" , "ar-SS-x-s" , "ar-SY-x-f" , "ar-SY-x-l" , "ar-SY-x-m" , "ar-SY-x-s" , "ar-TD-x-f" , "ar-TD-x-l" , "ar-TD-x-m" , "ar-TD-x-s" , "ar-TN-x-f" , "ar-TN-x-l" , "ar-TN-x-m" , "ar-TN-x-s" , "ar-YE-x-f" , "ar-YE-x-l" , "ar-YE-x-m" , "ar-YE-x-s" , "ar-x-f" , "ar-x-l" , "ar-x-m" , "ar-x-s" , "bn-IN-x-f" , "bn-IN-x-l" , "bn-IN-x-m" , "bn-IN-x-s" , "bn-x-f" , "bn-x-l" , "bn-x-m" , "bn-x-s" , "ccp-IN-x-f" , "ccp-IN-x-l" , "ccp-IN-x-m" , "ccp-IN-x-s" , "ccp-x-f" , "ccp-x-l" , "ccp-x-m" , "ccp-x-s" , "en-001-x-f" , "en-001-x-l" , "en-001-x-m" , "en-001-x-s" , "en-150-x-f" , "en-150-x-l" , "en-150-x-m" , "en-150-x-s" , "en-AE-x-f" , "en-AE-x-l" , "en-AE-x-m" , "en-AE-x-s" , "en-AG-x-f" , "en-AG-x-l" , "en-AG-x-m" , "en-AG-x-s" , "en-AI-x-f" , "en-AI-x-l" , "en-AI-x-m" , "en-AI-x-s" , "en-AS-x-f" , "en-AS-x-l" , "en-AS-x-m" , "en-AS-x-s" , "en-AT-x-f" , "en-AT-x-l" , "en-AT-x-m" , "en-AT-x-s" , "en-AU-x-f" , "en-AU-x-l" , "en-AU-x-m" , "en-AU-x-s" , "en-BB-x-f" , "en-BB-x-l" , "en-BB-x-m" , "en-BB-x-s" , "en-BE-x-f" , "en-BE-x-l" , "en-BE-x-m" , "en-BE-x-s" , "en-BI-x-f" , "en-BI-x-l" , "en-BI-x-m" , "en-BI-x-s" , "en-BM-x-f" , "en-BM-x-l" , "en-BM-x-m" , "en-BM-x-s" , "en-BS-x-f" , "en-BS-x-l" , "en-BS-x-m" , "en-BS-x-s" , "en-BW-x-f" , "en-BW-x-l" , "en-BW-x-m" , "en-BW-x-s" , "en-BZ-x-f" , "en-BZ-x-l" , "en-BZ-x-m" , "en-BZ-x-s" , "en-CA-x-f" , "en-CA-x-l" , "en-CA-x-m" , "en-CA-x-s" , "en-CC-x-f" , "en-CC-x-l" , "en-CC-x-m" , "en-CC-x-s" , "en-CH-x-f" , "en-CH-x-l" , "en-CH-x-m" , "en-CH-x-s" , "en-CK-x-f" , "en-CK-x-l" , "en-CK-x-m" , "en-CK-x-s" , "en-CM-x-f" , "en-CM-x-l" , "en-CM-x-m" , "en-CM-x-s" , "en-CX-x-f" , "en-CX-x-l" , "en-CX-x-m" , "en-CX-x-s" , "en-CY-x-f" , "en-CY-x-l" , "en-CY-x-m" , "en-CY-x-s" , "en-DE-x-f" , "en-DE-x-l" , "en-DE-x-m" , "en-DE-x-s" , "en-DG-x-f" , "en-DG-x-l" , "en-DG-x-m" , "en-DG-x-s" , "en-DK-x-f" , "en-DK-x-l" , "en-DK-x-m" , "en-DK-x-s" , "en-DM-x-f" , "en-DM-x-l" , "en-DM-x-m" , "en-DM-x-s" , "en-ER-x-f" , "en-ER-x-l" , "en-ER-x-m" , "en-ER-x-s" , "en-FI-x-f" , "en-FI-x-l" , "en-FI-x-m" , "en-FI-x-s" , "en-FJ-x-f" , "en-FJ-x-l" , "en-FJ-x-m" , "en-FJ-x-s" , "en-FK-x-f" , "en-FK-x-l" , "en-FK-x-m" , "en-FK-x-s" , "en-FM-x-f" , "en-FM-x-l" , "en-FM-x-m" , "en-FM-x-s" , "en-GB-x-f" , "en-GB-x-l" , "en-GB-x-m" , "en-GB-x-s" , "en-GD-x-f" , "en-GD-x-l" , "en-GD-x-m" , "en-GD-x-s" , "en-GG-x-f" , "en-GG-x-l" , "en-GG-x-m" , "en-GG-x-s" , "en-GH-x-f" , "en-GH-x-l" , "en-GH-x-m" , "en-GH-x-s" , "en-GI-x-f" , "en-GI-x-l" , "en-GI-x-m" , "en-GI-x-s" , "en-GM-x-f" , "en-GM-x-l" , "en-GM-x-m" , "en-GM-x-s" , "en-GU-x-f" , "en-GU-x-l" , "en-GU-x-m" , "en-GU-x-s" , "en-GY-x-f" , "en-GY-x-l" , "en-GY-x-m" , "en-GY-x-s" , "en-HK-x-f" , "en-HK-x-l" , "en-HK-x-m" , "en-HK-x-s" , "en-ID-x-f" , "en-ID-x-l" , "en-ID-x-m" , "en-ID-x-s" , "en-IE-x-f" , "en-IE-x-l" , "en-IE-x-m" , "en-IE-x-s" , "en-IL-x-f" , "en-IL-x-l" , "en-IL-x-m" , "en-IL-x-s" , "en-IM-x-f" , "en-IM-x-l" , "en-IM-x-m" , "en-IM-x-s" , "en-IN-x-f" , "en-IN-x-l" , "en-IN-x-m" , "en-IN-x-s" , "en-IO-x-f" , "en-IO-x-l" , "en-IO-x-m" , "en-IO-x-s" , "en-JE-x-f" , "en-JE-x-l" , "en-JE-x-m" , "en-JE-x-s" , "en-JM-x-f" , "en-JM-x-l" , "en-JM-x-m" , "en-JM-x-s" , "en-KE-x-f" , "en-KE-x-l" , "en-KE-x-m" , "en-KE-x-s" , "en-KI-x-f" , "en-KI-x-l" , "en-KI-x-m" , "en-KI-x-s" , "en-KN-x-f" , "en-KN-x-l" , "en-KN-x-m" , "en-KN-x-s" , "en-KY-x-f" , "en-KY-x-l" , "en-KY-x-m" , "en-KY-x-s" , "en-LC-x-f" , "en-LC-x-l" , "en-LC-x-m" , "en-LC-x-s" , "en-LR-x-f" , "en-LR-x-l" , "en-LR-x-m" , "en-LR-x-s" , "en-LS-x-f" , "en-LS-x-l" , "en-LS-x-m" , "en-LS-x-s" , "en-MG-x-f" , "en-MG-x-l" , "en-MG-x-m" , "en-MG-x-s" , "en-MH-x-f" , "en-MH-x-l" , "en-MH-x-m" , "en-MH-x-s" , "en-MO-x-f" , "en-MO-x-l" , "en-MO-x-m" , "en-MO-x-s" , "en-MP-x-f" , "en-MP-x-l" , "en-MP-x-m" , "en-MP-x-s" , "en-MS-x-f" , "en-MS-x-l" , "en-MS-x-m" , "en-MS-x-s" , "en-MT-x-f" , "en-MT-x-l" , "en-MT-x-m" , "en-MT-x-s" , "en-MU-x-f" , "en-MU-x-l" , "en-MU-x-m" , "en-MU-x-s" , "en-MV-x-f" , "en-MV-x-l" , "en-MV-x-m" , "en-MV-x-s" , "en-MW-x-f" , "en-MW-x-l" , "en-MW-x-m" , "en-MW-x-s" , "en-MY-x-f" , "en-MY-x-l" , "en-MY-x-m" , "en-MY-x-s" , "en-NA-x-f" , "en-NA-x-l" , "en-NA-x-m" , "en-NA-x-s" , "en-NF-x-f" , "en-NF-x-l" , "en-NF-x-m" , "en-NF-x-s" , "en-NG-x-f" , "en-NG-x-l" , "en-NG-x-m" , "en-NG-x-s" , "en-NL-x-f" , "en-NL-x-l" , "en-NL-x-m" , "en-NL-x-s" , "en-NR-x-f" , "en-NR-x-l" , "en-NR-x-m" , "en-NR-x-s" , "en-NU-x-f" , "en-NU-x-l" , "en-NU-x-m" , "en-NU-x-s" , "en-NZ-x-f" , "en-NZ-x-l" , "en-NZ-x-m" , "en-NZ-x-s" , "en-PG-x-f" , "en-PG-x-l" , "en-PG-x-m" , "en-PG-x-s" , "en-PH-x-f" , "en-PH-x-l" , "en-PH-x-m" , "en-PH-x-s" , "en-PK-x-f" , "en-PK-x-l" , "en-PK-x-m" , "en-PK-x-s" , "en-PN-x-f" , "en-PN-x-l" , "en-PN-x-m" , "en-PN-x-s" , "en-PR-x-f" , "en-PR-x-l" , "en-PR-x-m" , "en-PR-x-s" , "en-PW-x-f" , "en-PW-x-l" , "en-PW-x-m" , "en-PW-x-s" , "en-RW-x-f" , "en-RW-x-l" , "en-RW-x-m" , "en-RW-x-s" , "en-SB-x-f" , "en-SB-x-l" , "en-SB-x-m" , "en-SB-x-s" , "en-SC-x-f" , "en-SC-x-l" , "en-SC-x-m" , "en-SC-x-s" , "en-SD-x-f" , "en-SD-x-l" , "en-SD-x-m" , "en-SD-x-s" , "en-SE-x-f" , "en-SE-x-l" , "en-SE-x-m" , "en-SE-x-s" , "en-SG-x-f" , "en-SG-x-l" , "en-SG-x-m" , "en-SG-x-s" , "en-SH-x-f" , "en-SH-x-l" , "en-SH-x-m" , "en-SH-x-s" , "en-SI-x-f" , "en-SI-x-l" , "en-SI-x-m" , "en-SI-x-s" , "en-SL-x-f" , "en-SL-x-l" , "en-SL-x-m" , "en-SL-x-s" , "en-SS-x-f" , "en-SS-x-l" , "en-SS-x-m" , "en-SS-x-s" , "en-SX-x-f" , "en-SX-x-l" , "en-SX-x-m" , "en-SX-x-s" , "en-SZ-x-f" , "en-SZ-x-l" , "en-SZ-x-m" , "en-SZ-x-s" , "en-TC-x-f" , "en-TC-x-l" , "en-TC-x-m" , "en-TC-x-s" , "en-TK-x-f" , "en-TK-x-l" , "en-TK-x-m" , "en-TK-x-s" , "en-TO-x-f" , "en-TO-x-l" , "en-TO-x-m" , "en-TO-x-s" , "en-TT-x-f" , "en-TT-x-l" , "en-TT-x-m" , "en-TT-x-s" , "en-TV-x-f" , "en-TV-x-l" , "en-TV-x-m" , "en-TV-x-s" , "en-TZ-x-f" , "en-TZ-x-l" , "en-TZ-x-m" , "en-TZ-x-s" , "en-UG-x-f" , "en-UG-x-l" , "en-UG-x-m" , "en-UG-x-s" , "en-UM-x-f" , "en-UM-x-l" , "en-UM-x-m" , "en-UM-x-s" , "en-VC-x-f" , "en-VC-x-l" , "en-VC-x-m" , "en-VC-x-s" , "en-VG-x-f" , "en-VG-x-l" , "en-VG-x-m" , "en-VG-x-s" , "en-VI-x-f" , "en-VI-x-l" , "en-VI-x-m" , "en-VI-x-s" , "en-VU-x-f" , "en-VU-x-l" , "en-VU-x-m" , "en-VU-x-s" , "en-WS-x-f" , "en-WS-x-l" , "en-WS-x-m" , "en-WS-x-s" , "en-ZA-x-f" , "en-ZA-x-l" , "en-ZA-x-m" , "en-ZA-x-s" , "en-ZM-x-f" , "en-ZM-x-l" , "en-ZM-x-m" , "en-ZM-x-s" , "en-ZW-x-f" , "en-ZW-x-l" , "en-ZW-x-m" , "en-ZW-x-s" , "en-x-f" , "en-x-l" , "en-x-m" , "en-x-s" , "es-419-x-f" , "es-419-x-l" , "es-419-x-m" , "es-419-x-s" , "es-AR-x-f" , "es-AR-x-l" , "es-AR-x-m" , "es-AR-x-s" , "es-BO-x-f" , "es-BO-x-l" , "es-BO-x-m" , "es-BO-x-s" , "es-BR-x-f" , "es-BR-x-l" , "es-BR-x-m" , "es-BR-x-s" , "es-BZ-x-f" , "es-BZ-x-l" , "es-BZ-x-m" , "es-BZ-x-s" , "es-CL-x-f" , "es-CL-x-l" , "es-CL-x-m" , "es-CL-x-s" , "es-CO-x-f" , "es-CO-x-l" , "es-CO-x-m" , "es-CO-x-s" , "es-CR-x-f" , "es-CR-x-l" , "es-CR-x-m" , "es-CR-x-s" , "es-CU-x-f" , "es-CU-x-l" , "es-CU-x-m" , "es-CU-x-s" , "es-DO-x-f" , "es-DO-x-l" , "es-DO-x-m" , "es-DO-x-s" , "es-EA-x-f" , "es-EA-x-l" , "es-EA-x-m" , "es-EA-x-s" , "es-EC-x-f" , "es-EC-x-l" , "es-EC-x-m" , "es-EC-x-s" , "es-GQ-x-f" , "es-GQ-x-l" , "es-GQ-x-m" , "es-GQ-x-s" , "es-GT-x-f" , "es-GT-x-l" , "es-GT-x-m" , "es-GT-x-s" , "es-HN-x-f" , "es-HN-x-l" , "es-HN-x-m" , "es-HN-x-s" , "es-IC-x-f" , "es-IC-x-l" , "es-IC-x-m" , "es-IC-x-s" , "es-MX-x-f" , "es-MX-x-l" , "es-MX-x-m" , "es-MX-x-s" , "es-NI-x-f" , "es-NI-x-l" , "es-NI-x-m" , "es-NI-x-s" , "es-PA-x-f" , "es-PA-x-l" , "es-PA-x-m" , "es-PA-x-s" , "es-PE-x-f" , "es-PE-x-l" , "es-PE-x-m" , "es-PE-x-s" , "es-PH-x-f" , "es-PH-x-l" , "es-PH-x-m" , "es-PH-x-s" , "es-PR-x-f" , "es-PR-x-l" , "es-PR-x-m" , "es-PR-x-s" , "es-PY-x-f" , "es-PY-x-l" , "es-PY-x-m" , "es-PY-x-s" , "es-SV-x-f" , "es-SV-x-l" , "es-SV-x-m" , "es-SV-x-s" , "es-US-x-f" , "es-US-x-l" , "es-US-x-m" , "es-US-x-s" , "es-UY-x-f" , "es-UY-x-l" , "es-UY-x-m" , "es-UY-x-s" , "es-VE-x-f" , "es-VE-x-l" , "es-VE-x-m" , "es-VE-x-s" , "es-x-f" , "es-x-l" , "es-x-m" , "es-x-s" , "fil-x-f" , "fil-x-l" , "fil-x-m" , "fil-x-s" , "fr-BE-x-f" , "fr-BE-x-l" , "fr-BE-x-m" , "fr-BE-x-s" , "fr-BF-x-f" , "fr-BF-x-l" , "fr-BF-x-m" , "fr-BF-x-s" , "fr-BI-x-f" , "fr-BI-x-l" , "fr-BI-x-m" , "fr-BI-x-s" , "fr-BJ-x-f" , "fr-BJ-x-l" , "fr-BJ-x-m" , "fr-BJ-x-s" , "fr-BL-x-f" , "fr-BL-x-l" , "fr-BL-x-m" , "fr-BL-x-s" , "fr-CA-x-f" , "fr-CA-x-l" , "fr-CA-x-m" , "fr-CA-x-s" , "fr-CD-x-f" , "fr-CD-x-l" , "fr-CD-x-m" , "fr-CD-x-s" , "fr-CF-x-f" , "fr-CF-x-l" , "fr-CF-x-m" , "fr-CF-x-s" , "fr-CG-x-f" , "fr-CG-x-l" , "fr-CG-x-m" , "fr-CG-x-s" , "fr-CH-x-f" , "fr-CH-x-l" , "fr-CH-x-m" , "fr-CH-x-s" , "fr-CI-x-f" , "fr-CI-x-l" , "fr-CI-x-m" , "fr-CI-x-s" , "fr-CM-x-f" , "fr-CM-x-l" , "fr-CM-x-m" , "fr-CM-x-s" , "fr-DJ-x-f" , "fr-DJ-x-l" , "fr-DJ-x-m" , "fr-DJ-x-s" , "fr-DZ-x-f" , "fr-DZ-x-l" , "fr-DZ-x-m" , "fr-DZ-x-s" , "fr-GA-x-f" , "fr-GA-x-l" , "fr-GA-x-m" , "fr-GA-x-s" , "fr-GF-x-f" , "fr-GF-x-l" , "fr-GF-x-m" , "fr-GF-x-s" , "fr-GN-x-f" , "fr-GN-x-l" , "fr-GN-x-m" , "fr-GN-x-s" , "fr-GP-x-f" , "fr-GP-x-l" , "fr-GP-x-m" , "fr-GP-x-s" , "fr-GQ-x-f" , "fr-GQ-x-l" , "fr-GQ-x-m" , "fr-GQ-x-s" , "fr-HT-x-f" , "fr-HT-x-l" , "fr-HT-x-m" , "fr-HT-x-s" , "fr-KM-x-f" , "fr-KM-x-l" , "fr-KM-x-m" , "fr-KM-x-s" , "fr-LU-x-f" , "fr-LU-x-l" , "fr-LU-x-m" , "fr-LU-x-s" , "fr-MA-x-f" , "fr-MA-x-l" , "fr-MA-x-m" , "fr-MA-x-s" , "fr-MC-x-f" , "fr-MC-x-l" , "fr-MC-x-m" , "fr-MC-x-s" , "fr-MF-x-f" , "fr-MF-x-l" , "fr-MF-x-m" , "fr-MF-x-s" , "fr-MG-x-f" , "fr-MG-x-l" , "fr-MG-x-m" , "fr-MG-x-s" , "fr-ML-x-f" , "fr-ML-x-l" , "fr-ML-x-m" , "fr-ML-x-s" , "fr-MQ-x-f" , "fr-MQ-x-l" , "fr-MQ-x-m" , "fr-MQ-x-s" , "fr-MR-x-f" , "fr-MR-x-l" , "fr-MR-x-m" , "fr-MR-x-s" , "fr-MU-x-f" , "fr-MU-x-l" , "fr-MU-x-m" , "fr-MU-x-s" , "fr-NC-x-f" , "fr-NC-x-l" , "fr-NC-x-m" , "fr-NC-x-s" , "fr-NE-x-f" , "fr-NE-x-l" , "fr-NE-x-m" , "fr-NE-x-s" , "fr-PF-x-f" , "fr-PF-x-l" , "fr-PF-x-m" , "fr-PF-x-s" , "fr-PM-x-f" , "fr-PM-x-l" , "fr-PM-x-m" , "fr-PM-x-s" , "fr-RE-x-f" , "fr-RE-x-l" , "fr-RE-x-m" , "fr-RE-x-s" , "fr-RW-x-f" , "fr-RW-x-l" , "fr-RW-x-m" , "fr-RW-x-s" , "fr-SC-x-f" , "fr-SC-x-l" , "fr-SC-x-m" , "fr-SC-x-s" , "fr-SN-x-f" , "fr-SN-x-l" , "fr-SN-x-m" , "fr-SN-x-s" , "fr-SY-x-f" , "fr-SY-x-l" , "fr-SY-x-m" , "fr-SY-x-s" , "fr-TD-x-f" , "fr-TD-x-l" , "fr-TD-x-m" , "fr-TD-x-s" , "fr-TG-x-f" , "fr-TG-x-l" , "fr-TG-x-m" , "fr-TG-x-s" , "fr-TN-x-f" , "fr-TN-x-l" , "fr-TN-x-m" , "fr-TN-x-s" , "fr-VU-x-f" , "fr-VU-x-l" , "fr-VU-x-m" , "fr-VU-x-s" , "fr-WF-x-f" , "fr-WF-x-l" , "fr-WF-x-m" , "fr-WF-x-s" , "fr-YT-x-f" , "fr-YT-x-l" , "fr-YT-x-m" , "fr-YT-x-s" , "fr-x-f" , "fr-x-l" , "fr-x-m" , "fr-x-s" , "hi-Latn-x-f" , "hi-Latn-x-l" , "hi-Latn-x-m" , "hi-Latn-x-s" , "ja-x-f" , "ja-x-l" , "ja-x-m" , "ja-x-s" , "ru-BY-x-f" , "ru-BY-x-l" , "ru-BY-x-m" , "ru-BY-x-s" , "ru-KG-x-f" , "ru-KG-x-l" , "ru-KG-x-m" , "ru-KG-x-s" , "ru-KZ-x-f" , "ru-KZ-x-l" , "ru-KZ-x-m" , "ru-KZ-x-s" , "ru-MD-x-f" , "ru-MD-x-l" , "ru-MD-x-m" , "ru-MD-x-s" , "ru-UA-x-f" , "ru-UA-x-l" , "ru-UA-x-m" , "ru-UA-x-s" , "ru-x-f" , "ru-x-l" , "ru-x-m" , "ru-x-s" , "sr-BA-x-f" , "sr-BA-x-l" , "sr-BA-x-m" , "sr-BA-x-s" , "sr-Latn-BA-x-f" , "sr-Latn-BA-x-l" , "sr-Latn-BA-x-m" , "sr-Latn-BA-x-s" , "sr-Latn-XK-x-f" , "sr-Latn-XK-x-l" , "sr-Latn-XK-x-m" , "sr-Latn-XK-x-s" , "sr-Latn-x-f" , "sr-Latn-x-l" , "sr-Latn-x-m" , "sr-Latn-x-s" , "sr-ME-x-f" , "sr-ME-x-l" , "sr-ME-x-m" , "sr-ME-x-s" , "sr-XK-x-f" , "sr-XK-x-l" , "sr-XK-x-m" , "sr-XK-x-s" , "sr-x-f" , "sr-x-l" , "sr-x-m" , "sr-x-s" , "th-x-f" , "th-x-l" , "th-x-m" , "th-x-s" , "tr-CY-x-f" , "tr-CY-x-l" , "tr-CY-x-m" , "tr-CY-x-s" , "tr-x-f" , "tr-x-l" , "tr-x-m" , "tr-x-s" , "und-x-f" , "und-x-l" , "und-x-m" , "und-x-s"] ; if let Ok (payload) = KEYS . binary_search_by (| k | req . locale . strict_cmp (k . as_bytes ()) . reverse ()) . map (| i | * unsafe { VALUES . get_unchecked (i) }) { Ok (icu_provider :: DataResponse { payload : Some (icu_provider :: DataPayload :: from_static_ref (payload)) , metadata : Default :: default () , }) } else { Err (icu_provider :: DataErrorKind :: MissingLocale . with_req (< icu_datetime :: provider :: neo :: IslamicDatePatternV1Marker as icu_provider :: KeyedDataMarker > :: KEY , req)) } } } } }