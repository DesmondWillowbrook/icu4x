// @generated
# [doc = " Implement `DataProvider<NarrowMonthRelativeTimeFormatDataV1Marker>` on the given struct using the data"] # [doc = r" hardcoded in this file. This allows the struct to be used with"] # [doc = r" `icu`'s `_unstable` constructors."] # [doc (hidden)] # [macro_export] macro_rules ! __impl_relativetime_narrow_month_v1 { ($ provider : ty) => { # [clippy :: msrv = "1.67"] const _ : () = < $ provider > :: MUST_USE_MAKE_PROVIDER_MACRO ; # [clippy :: msrv = "1.67"] impl icu_provider :: DataProvider < icu_experimental :: relativetime :: provider :: NarrowMonthRelativeTimeFormatDataV1Marker > for $ provider { fn load (& self , req : icu_provider :: DataRequest ,) -> Result < icu_provider :: DataResponse < icu_experimental :: relativetime :: provider :: NarrowMonthRelativeTimeFormatDataV1Marker > , icu_provider :: DataError > { static TH : < icu_experimental :: relativetime :: provider :: NarrowMonthRelativeTimeFormatDataV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_experimental :: relativetime :: provider :: RelativeTimePatternDataV1 { relatives : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\xFF\0\x01") } , unsafe { zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x03\0\0\0\0\0$\0<\0\xE0\xB9\x80\xE0\xB8\x94\xE0\xB8\xB7\xE0\xB8\xAD\xE0\xB8\x99\xE0\xB8\x97\xE0\xB8\xB5\xE0\xB9\x88\xE0\xB9\x81\xE0\xB8\xA5\xE0\xB9\x89\xE0\xB8\xA7\xE0\xB9\x80\xE0\xB8\x94\xE0\xB8\xB7\xE0\xB8\xAD\xE0\xB8\x99\xE0\xB8\x99\xE0\xB8\xB5\xE0\xB9\x89\xE0\xB9\x80\xE0\xB8\x94\xE0\xB8\xB7\xE0\xB8\xAD\xE0\xB8\x99\xE0\xB8\xAB\xE0\xB8\x99\xE0\xB9\x89\xE0\xB8\xB2") }) } , past : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : None , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" ‡πÄ‡∏î\u{e37}‡∏≠‡∏ô‡∏ó\u{e35}\u{e48}‡πÅ‡∏•\u{e49}‡∏ß") , index : 0u8 , } , } , future : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : None , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("‡πÉ‡∏ô  ‡πÄ‡∏î\u{e37}‡∏≠‡∏ô") , index : 7u8 , } , } , } ; static CCP : < icu_experimental :: relativetime :: provider :: NarrowMonthRelativeTimeFormatDataV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_experimental :: relativetime :: provider :: RelativeTimePatternDataV1 { relatives : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\xFF\0\x01") } , unsafe { zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x03\0\0\0\0\0%\0B\0\xF0\x91\x84\x89\xF0\x91\x84\xAC\xF0\x91\x84\xA3\xF0\x91\x84\xA7\xF0\x91\x84\x98\xF0\x91\x84\xAC \xF0\x91\x84\x9F\xF0\x91\x84\x8F\xF0\x91\x84\xB4\xF0\x91\x84\x83\xF0\x91\x84\xB3\xF0\x91\x84\x86\xF0\x91\x84\xAC \xF0\x91\x84\x9F\xF0\x91\x84\x8F\xF0\x91\x84\xB4\xF0\x91\x84\x9B\xF0\x91\x84\xA7\xF0\x91\x84\xA2\xF0\x91\x84\xAC \xF0\x91\x84\x9F\xF0\x91\x84\x8F\xF0\x91\x84\xB4") }) } , past : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" ëÑüëÑè\u{11127} ëÑÉëÑâëÑ¨") , index : 0u8 , }) , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" ëÑüëÑè\u{11127} ëÑÉëÑâëÑ¨") , index : 0u8 , } , } , future : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : None , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" ëÑüëÑèëÑ¨") , index : 0u8 , } , } , } ; static UND : < icu_experimental :: relativetime :: provider :: NarrowMonthRelativeTimeFormatDataV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_experimental :: relativetime :: provider :: RelativeTimePatternDataV1 { relatives : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\xFF\0\x01") } , unsafe { zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x03\0\0\0\0\0\n\0\x14\0last monththis monthnext month") }) } , past : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : None , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("- m") , index : 1u8 , } , } , future : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : None , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("+ m") , index : 1u8 , } , } , } ; static ES_MX : < icu_experimental :: relativetime :: provider :: NarrowMonthRelativeTimeFormatDataV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_experimental :: relativetime :: provider :: RelativeTimePatternDataV1 { relatives : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\xFF\0\x01") } , unsafe { zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x03\0\0\0\0\0\r\0\x15\0el mes pasadoeste mesel mes pr\xC3\xB3ximo") }) } , past : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("hace  m") , index : 5u8 , }) , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("hace  m") , index : 5u8 , } , } , future : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("en  m") , index : 3u8 , }) , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("en  m") , index : 3u8 , } , } , } ; static ES : < icu_experimental :: relativetime :: provider :: NarrowMonthRelativeTimeFormatDataV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_experimental :: relativetime :: provider :: RelativeTimePatternDataV1 { relatives : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\xFF\0\x01") } , unsafe { zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x03\0\0\0\0\0\r\0\x15\0el mes pasadoeste mesel pr\xC3\xB3ximo mes") }) } , past : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("hace  m") , index : 5u8 , }) , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("hace  m") , index : 5u8 , } , } , future : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("dentro de  m") , index : 10u8 , }) , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("dentro de  m") , index : 10u8 , } , } , } ; static SR_LATN : < icu_experimental :: relativetime :: provider :: NarrowMonthRelativeTimeFormatDataV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_experimental :: relativetime :: provider :: RelativeTimePatternDataV1 { relatives : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\xFF\0\x01") } , unsafe { zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x03\0\0\0\0\0\r\0\x16\0pro\xC5\xA1log mes.ovog mes.slede\xC4\x87eg mes.") }) } , past : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("pre  m.") , index : 4u8 , }) , two : None , few : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("pre  m.") , index : 4u8 , }) , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("pre  m.") , index : 4u8 , } , } , future : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("za  m.") , index : 3u8 , }) , two : None , few : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("za  m.") , index : 3u8 , }) , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("za  m.") , index : 3u8 , } , } , } ; static TR : < icu_experimental :: relativetime :: provider :: NarrowMonthRelativeTimeFormatDataV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_experimental :: relativetime :: provider :: RelativeTimePatternDataV1 { relatives : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\xFF\0\x01") } , unsafe { zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x03\0\0\0\0\0\t\0\x0E\0ge\xC3\xA7en aybu aygelecek ay") }) } , past : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" ay √∂nce") , index : 0u8 , }) , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" ay √∂nce") , index : 0u8 , } , } , future : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" ay sonra") , index : 0u8 , }) , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" ay sonra") , index : 0u8 , } , } , } ; static JA : < icu_experimental :: relativetime :: provider :: NarrowMonthRelativeTimeFormatDataV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_experimental :: relativetime :: provider :: RelativeTimePatternDataV1 { relatives : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\xFF\0\x01") } , unsafe { zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x03\0\0\0\0\0\x06\0\x0C\0\xE5\x85\x88\xE6\x9C\x88\xE4\xBB\x8A\xE6\x9C\x88\xE6\x9D\xA5\xE6\x9C\x88") }) } , past : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : None , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("„ÅãÊúàÂâç") , index : 0u8 , } , } , future : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : None , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("„ÅãÊúàÂæå") , index : 0u8 , } , } , } ; static EN_001 : < icu_experimental :: relativetime :: provider :: NarrowMonthRelativeTimeFormatDataV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_experimental :: relativetime :: provider :: RelativeTimePatternDataV1 { relatives : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\xFF\0\x01") } , unsafe { zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x03\0\0\0\0\0\x07\0\x0E\0last mothis monext mo") }) } , past : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" mo ago") , index : 0u8 , }) , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" mo ago") , index : 0u8 , } , } , future : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("in  mo") , index : 3u8 , }) , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("in  mo") , index : 3u8 , } , } , } ; static EN_CA : < icu_experimental :: relativetime :: provider :: NarrowMonthRelativeTimeFormatDataV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_experimental :: relativetime :: provider :: RelativeTimePatternDataV1 { relatives : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\xFF\0\x01") } , unsafe { zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x03\0\0\0\0\0\x07\0\x0E\0last mothis monext mo") }) } , past : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" mo ago") , index : 0u8 , }) , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" mos ago") , index : 0u8 , } , } , future : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("in  mo") , index : 3u8 , }) , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("in  mos") , index : 3u8 , } , } , } ; static HI_LATN : < icu_experimental :: relativetime :: provider :: NarrowMonthRelativeTimeFormatDataV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_experimental :: relativetime :: provider :: RelativeTimePatternDataV1 { relatives : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\xFF\0\x01") } , unsafe { zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x03\0\0\0\0\0\x08\0\x0E\0last mo.is mo.next mo.") }) } , past : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("mo pahle") , index : 0u8 , }) , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("mo pahle") , index : 0u8 , } , } , future : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("mo mein") , index : 0u8 , }) , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("mo mein") , index : 0u8 , } , } , } ; static EN : < icu_experimental :: relativetime :: provider :: NarrowMonthRelativeTimeFormatDataV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_experimental :: relativetime :: provider :: RelativeTimePatternDataV1 { relatives : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\xFF\0\x01") } , unsafe { zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x03\0\0\0\0\0\x08\0\x10\0last mo.this mo.next mo.") }) } , past : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("mo ago") , index : 0u8 , }) , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("mo ago") , index : 0u8 , } , } , future : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("in mo") , index : 3u8 , }) , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("in mo") , index : 3u8 , } , } , } ; static SR_LATN_BA : < icu_experimental :: relativetime :: provider :: NarrowMonthRelativeTimeFormatDataV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_experimental :: relativetime :: provider :: RelativeTimePatternDataV1 { relatives : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\xFF\0\x01") } , unsafe { zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x03\0\0\0\0\0\x0E\0\x18\0pro\xC5\xA1log mjes.ovog mjes.sljede\xC4\x87eg m.") }) } , past : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("prije  m.") , index : 6u8 , }) , two : None , few : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("prije  m.") , index : 6u8 , }) , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("prije  m.") , index : 6u8 , } , } , future : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("za  m.") , index : 3u8 , }) , two : None , few : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("za  m.") , index : 3u8 , }) , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("za  m.") , index : 3u8 , } , } , } ; static FR : < icu_experimental :: relativetime :: provider :: NarrowMonthRelativeTimeFormatDataV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_experimental :: relativetime :: provider :: RelativeTimePatternDataV1 { relatives : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\xFF\0\x01") } , unsafe { zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x03\0\0\0\0\0\x0F\0\x19\0le mois dernierce mois-cile mois prochain") }) } , past : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("- m.") , index : 1u8 , }) , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("- m.") , index : 1u8 , } , } , future : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("+ m.") , index : 1u8 , }) , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("+ m.") , index : 1u8 , } , } , } ; static FIL : < icu_experimental :: relativetime :: provider :: NarrowMonthRelativeTimeFormatDataV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_experimental :: relativetime :: provider :: RelativeTimePatternDataV1 { relatives : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\xFF\0\x01") } , unsafe { zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x03\0\0\0\0\0\x0F\0\x1C\0nakaraang buwanngayong buwansusunod na buwan") }) } , past : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" buwan ang nakalipas") , index : 0u8 , }) , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" buwan ang nakalipas") , index : 0u8 , } , } , future : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("sa  buwan") , index : 3u8 , }) , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("sa  buwan") , index : 3u8 , } , } , } ; static RU : < icu_experimental :: relativetime :: provider :: NarrowMonthRelativeTimeFormatDataV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_experimental :: relativetime :: provider :: RelativeTimePatternDataV1 { relatives : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\xFF\0\x01") } , unsafe { zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x03\0\0\0\0\0\x10\0 \0\xD0\xB2 \xD0\xBF\xD1\x80. \xD0\xBC\xD0\xB5\xD1\x81.\xD0\xB2 \xD1\x8D\xD1\x82. \xD0\xBC\xD0\xB5\xD1\x81.\xD0\xB2 \xD1\x81\xD0\xBB\xD0\xB5\xD0\xB4. \xD0\xBC\xD0\xB5\xD1\x81.") }) } , past : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("- –º–µ—Å.") , index : 1u8 , }) , two : None , few : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("- –º–µ—Å.") , index : 1u8 , }) , many : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("- –º–µ—Å.") , index : 1u8 , }) , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("- –º–µ—Å.") , index : 1u8 , } , } , future : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("+ –º–µ—Å.") , index : 1u8 , }) , two : None , few : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("+ –º–µ—Å.") , index : 1u8 , }) , many : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("+ –º–µ—Å.") , index : 1u8 , }) , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("+ –º–µ—Å.") , index : 1u8 , } , } , } ; static BN : < icu_experimental :: relativetime :: provider :: NarrowMonthRelativeTimeFormatDataV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_experimental :: relativetime :: provider :: RelativeTimePatternDataV1 { relatives : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\xFF\0\x01") } , unsafe { zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x03\0\0\0\0\0\x10\0 \0\xE0\xA6\x97\xE0\xA6\xA4 \xE0\xA6\xAE\xE0\xA6\xBE\xE0\xA6\xB8\xE0\xA6\x8F\xE0\xA6\x87 \xE0\xA6\xAE\xE0\xA6\xBE\xE0\xA6\xB8\xE0\xA6\xAA\xE0\xA6\xB0\xE0\xA7\x87\xE0\xA6\xB0 \xE0\xA6\xAE\xE0\xA6\xBE\xE0\xA6\xB8") }) } , past : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" ‡¶Æ\u{9be}‡¶∏ ‡¶Ü‡¶ó‡ßá") , index : 0u8 , }) , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" ‡¶Æ\u{9be}‡¶∏ ‡¶Ü‡¶ó‡ßá") , index : 0u8 , } , } , future : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" ‡¶Æ\u{9be}‡¶∏‡ßá") , index : 0u8 , }) , two : None , few : None , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" ‡¶Æ\u{9be}‡¶∏‡ßá") , index : 0u8 , } , } , } ; static SR : < icu_experimental :: relativetime :: provider :: NarrowMonthRelativeTimeFormatDataV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_experimental :: relativetime :: provider :: RelativeTimePatternDataV1 { relatives : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\xFF\0\x01") } , unsafe { zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x03\0\0\0\0\0\x16\0&\0\xD0\xBF\xD1\x80\xD0\xBE\xD1\x88\xD0\xBB\xD0\xBE\xD0\xB3 \xD0\xBC\xD0\xB5\xD1\x81.\xD0\xBE\xD0\xB2\xD0\xBE\xD0\xB3 \xD0\xBC\xD0\xB5\xD1\x81.\xD1\x81\xD0\xBB\xD0\xB5\xD0\xB4\xD0\xB5\xD1\x9B\xD0\xB5\xD0\xB3 \xD0\xBC\xD0\xB5\xD1\x81.") }) } , past : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("–ø—Ä–µ  –º.") , index : 7u8 , }) , two : None , few : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("–ø—Ä–µ  –º.") , index : 7u8 , }) , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("–ø—Ä–µ  –º.") , index : 7u8 , } , } , future : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("–∑–∞  –º.") , index : 5u8 , }) , two : None , few : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("–∑–∞  –º.") , index : 5u8 , }) , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("–∑–∞  –º.") , index : 5u8 , } , } , } ; static AR : < icu_experimental :: relativetime :: provider :: NarrowMonthRelativeTimeFormatDataV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_experimental :: relativetime :: provider :: RelativeTimePatternDataV1 { relatives : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\xFF\0\x01") } , unsafe { zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x03\0\0\0\0\0\x17\0(\0\xD8\xA7\xD9\x84\xD8\xB4\xD9\x87\xD8\xB1 \xD8\xA7\xD9\x84\xD9\x85\xD8\xA7\xD8\xB6\xD9\x8A\xD9\x87\xD8\xB0\xD8\xA7 \xD8\xA7\xD9\x84\xD8\xB4\xD9\x87\xD8\xB1\xD8\xA7\xD9\x84\xD8\xB4\xD9\x87\xD8\xB1 \xD8\xA7\xD9\x84\xD9\x82\xD8\xA7\xD8\xAF\xD9\x85") }) } , past : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("ŸÇÿ®ŸÑ  ÿ¥Ÿáÿ±") , index : 7u8 , }) , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("ŸÇÿ®ŸÑ ÿ¥Ÿáÿ± Ÿàÿßÿ≠ÿØ") , index : 255u8 , }) , two : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("ŸÇÿ®ŸÑ ÿ¥Ÿáÿ±ŸäŸÜ") , index : 255u8 , }) , few : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("ŸÇÿ®ŸÑ  ÿ£ÿ¥Ÿáÿ±") , index : 7u8 , }) , many : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("ŸÇÿ®ŸÑ  ÿ¥Ÿáÿ±\u{64b}ÿß") , index : 7u8 , }) , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("ŸÇÿ®ŸÑ  ÿ¥Ÿáÿ±") , index : 7u8 , } , } , future : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("ÿÆŸÑÿßŸÑ  ÿ¥Ÿáÿ±") , index : 9u8 , }) , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("ÿÆŸÑÿßŸÑ ÿ¥Ÿáÿ± Ÿàÿßÿ≠ÿØ") , index : 255u8 , }) , two : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("ÿÆŸÑÿßŸÑ ÿ¥Ÿáÿ±ŸäŸÜ") , index : 255u8 , }) , few : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("ÿÆŸÑÿßŸÑ  ÿ£ÿ¥Ÿáÿ±") , index : 9u8 , }) , many : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("ÿÆŸÑÿßŸÑ  ÿ¥Ÿáÿ±\u{64b}ÿß") , index : 9u8 , }) , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("ÿÆŸÑÿßŸÑ  ÿ¥Ÿáÿ±") , index : 9u8 , } , } , } ; static SR_BA : < icu_experimental :: relativetime :: provider :: NarrowMonthRelativeTimeFormatDataV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_experimental :: relativetime :: provider :: RelativeTimePatternDataV1 { relatives : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\xFF\0\x01") } , unsafe { zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x03\0\0\0\0\0\x18\0*\0\xD0\xBF\xD1\x80\xD0\xBE\xD1\x88\xD0\xBB\xD0\xBE\xD0\xB3 \xD0\xBC\xD1\x98\xD0\xB5\xD1\x81.\xD0\xBE\xD0\xB2\xD0\xBE\xD0\xB3 \xD0\xBC\xD1\x98\xD0\xB5\xD1\x81.\xD1\x81\xD1\x99\xD0\xB5\xD0\xB4\xD0\xB5\xD1\x9B\xD0\xB5\xD0\xB3 \xD0\xBC.") }) } , past : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("–ø—Ä–∏—ò–µ  –º.") , index : 11u8 , }) , two : None , few : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("–ø—Ä–∏—ò–µ  –º.") , index : 11u8 , }) , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("–ø—Ä–∏—ò–µ  –º.") , index : 11u8 , } , } , future : icu_experimental :: relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("–∑–∞  –º.") , index : 5u8 , }) , two : None , few : Some (icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("–∑–∞  –º.") , index : 5u8 , }) , many : None , other : icu_experimental :: relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("–∑–∞  –º.") , index : 5u8 , } , } , } ; static VALUES : [& < icu_experimental :: relativetime :: provider :: NarrowMonthRelativeTimeFormatDataV1Marker as icu_provider :: DataMarker > :: Yokeable ; 233usizestatic KEYS : [& str ; 233usize] = ["ar" , "ar-AE" , "ar-BH" , "ar-DJ" , "ar-DZ" , "ar-EG" , "ar-EH" , "ar-ER" , "ar-IL" , "ar-IQ" , "ar-JO" , "ar-KM" , "ar-KW" , "ar-LB" , "ar-LY" , "ar-MA" , "ar-MR" , "ar-OM" , "ar-PS" , "ar-QA" , "ar-SA" , "ar-SD" , "ar-SO" , "ar-SS" , "ar-SY" , "ar-TD" , "ar-TN" , "ar-YE" , "bn" , "bn-IN" , "ccp" , "ccp-IN" , "en" , "en-001" , "en-150" , "en-AE" , "en-AG" , "en-AI" , "en-AS" , "en-AT" , "en-AU" , "en-BB" , "en-BE" , "en-BI" , "en-BM" , "en-BS" , "en-BW" , "en-BZ" , "en-CA" , "en-CC" , "en-CH" , "en-CK" , "en-CM" , "en-CX" , "en-CY" , "en-DE" , "en-DG" , "en-DK" , "en-DM" , "en-ER" , "en-FI" , "en-FJ" , "en-FK" , "en-FM" , "en-GB" , "en-GD" , "en-GG" , "en-GH" , "en-GI" , "en-GM" , "en-GU" , "en-GY" , "en-HK" , "en-ID" , "en-IE" , "en-IL" , "en-IM" , "en-IN" , "en-IO" , "en-JE" , "en-JM" , "en-KE" , "en-KI" , "en-KN" , "en-KY" , "en-LC" , "en-LR" , "en-LS" , "en-MG" , "en-MH" , "en-MO" , "en-MP" , "en-MS" , "en-MT" , "en-MU" , "en-MV" , "en-MW" , "en-MY" , "en-NA" , "en-NF" , "en-NG" , "en-NL" , "en-NR" , "en-NU" , "en-NZ" , "en-PG" , "en-PH" , "en-PK" , "en-PN" , "en-PR" , "en-PW" , "en-RW" , "en-SB" , "en-SC" , "en-SD" , "en-SE" , "en-SG" , "en-SH" , "en-SI" , "en-SL" , "en-SS" , "en-SX" , "en-SZ" , "en-TC" , "en-TK" , "en-TO" , "en-TT" , "en-TV" , "en-TZ" , "en-UG" , "en-UM" , "en-VC" , "en-VG" , "en-VI" , "en-VU" , "en-WS" , "en-ZA" , "en-ZM" , "en-ZW" , "es" , "es-419" , "es-AR" , "es-BO" , "es-BR" , "es-BZ" , "es-CL" , "es-CO" , "es-CR" , "es-CU" , "es-DO" , "es-EA" , "es-EC" , "es-GQ" , "es-GT" , "es-HN" , "es-IC" , "es-MX" , "es-NI" , "es-PA" , "es-PE" , "es-PH" , "es-PR" , "es-PY" , "es-SV" , "es-US" , "es-UY" , "es-VE" , "fil" , "fr" , "fr-BE" , "fr-BF" , "fr-BI" , "fr-BJ" , "fr-BL" , "fr-CA" , "fr-CD" , "fr-CF" , "fr-CG" , "fr-CH" , "fr-CI" , "fr-CM" , "fr-DJ" , "fr-DZ" , "fr-GA" , "fr-GF" , "fr-GN" , "fr-GP" , "fr-GQ" , "fr-HT" , "fr-KM" , "fr-LU" , "fr-MA" , "fr-MC" , "fr-MF" , "fr-MG" , "fr-ML" , "fr-MQ" , "fr-MR" , "fr-MU" , "fr-NC" , "fr-NE" , "fr-PF" , "fr-PM" , "fr-RE" , "fr-RW" , "fr-SC" , "fr-SN" , "fr-SY" , "fr-TD" , "fr-TG" , "fr-TN" , "fr-VU" , "fr-WF" , "fr-YT" , "hi-Latn" , "ja" , "ru" , "ru-BY" , "ru-KG" , "ru-KZ" , "ru-MD" , "ru-UA" , "sr" , "sr-BA" , "sr-Latn" , "sr-Latn-BA" , "sr-Latn-XK" , "sr-ME" , "sr-XK" , "th" , "tr" , "tr-CY" , "und"] ; if let Ok (payload) = KEYS . binary_search_by (| k | req . locale . strict_cmp (k . as_bytes ()) . reverse ()) . map (| i | * unsafe { VALUES . get_unchecked (i) }) { Ok (icu_provider :: DataResponse { payload : Some (icu_provider :: DataPayload :: from_static_ref (payload)) , metadata : Default :: default () , }) } else { Err (icu_provider :: DataErrorKind :: MissingLocale . with_req (< icu_experimental :: relativetime :: provider :: NarrowMonthRelativeTimeFormatDataV1Marker as icu_provider :: KeyedDataMarker > :: KEY , req)) } } } } }